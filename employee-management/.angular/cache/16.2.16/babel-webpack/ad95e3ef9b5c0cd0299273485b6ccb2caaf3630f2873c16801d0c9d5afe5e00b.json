{"ast":null,"code":"import _asyncToGenerator from \"C:/Employee Management/employee-management/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createClient } from '@supabase/supabase-js';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport class SupabaseService {\n  constructor() {\n    this.supabase = createClient(environment.supabaseUrl, environment.supabaseKey);\n  }\n  getEmployees() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const {\n        data,\n        error\n      } = yield _this.supabase.from('employees').select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) throw error;\n      return data || [];\n    })();\n  }\n  getEmployee(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        data,\n        error\n      } = yield _this2.supabase.from('employees').select('*').eq('id', id).single();\n      if (error) throw error;\n      return data;\n    })();\n  }\n  createEmployee(employee) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        data,\n        error\n      } = yield _this3.supabase.from('employees').insert([employee]).select().single();\n      if (error) throw error;\n      return data;\n    })();\n  }\n  updateEmployee(id, employee) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        data,\n        error\n      } = yield _this4.supabase.from('employees').update(employee).eq('id', id).select().single();\n      if (error) throw error;\n      return data;\n    })();\n  }\n  deleteEmployee(id) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        error\n      } = yield _this5.supabase.from('employees').delete().eq('id', id);\n      if (error) throw error;\n    })();\n  }\n  static {\n    this.ɵfac = function SupabaseService_Factory(t) {\n      return new (t || SupabaseService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SupabaseService,\n      factory: SupabaseService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["createClient","environment","SupabaseService","constructor","supabase","supabaseUrl","supabaseKey","getEmployees","_this","_asyncToGenerator","data","error","from","select","order","ascending","getEmployee","id","_this2","eq","single","createEmployee","employee","_this3","insert","updateEmployee","_this4","update","deleteEmployee","_this5","delete","factory","ɵfac","providedIn"],"sources":["C:\\Employee Management\\employee-management\\src\\app\\services\\supabase.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { createClient, SupabaseClient } from '@supabase/supabase-js';\r\nimport { Employee } from '../models/employee.model';\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupabaseService {\r\n  private supabase: SupabaseClient;\r\n\r\n  constructor() {\r\n    this.supabase = createClient(\r\n      environment.supabaseUrl,\r\n      environment.supabaseKey\r\n    );\r\n  }\r\n\r\n  async getEmployees(): Promise<Employee[]> {\r\n    const { data, error } = await this.supabase\r\n      .from('employees')\r\n      .select('*')\r\n      .order('created_at', { ascending: false });\r\n\r\n    if (error) throw error;\r\n    return data || [];\r\n  }\r\n\r\n  async getEmployee(id: string): Promise<Employee> {\r\n    const { data, error } = await this.supabase\r\n      .from('employees')\r\n      .select('*')\r\n      .eq('id', id)\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  }\r\n\r\n  async createEmployee(employee: Employee): Promise<Employee> {\r\n    const { data, error } = await this.supabase\r\n      .from('employees')\r\n      .insert([employee])\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  }\r\n\r\n  async updateEmployee(id: string, employee: Employee): Promise<Employee> {\r\n    const { data, error } = await this.supabase\r\n      .from('employees')\r\n      .update(employee)\r\n      .eq('id', id)\r\n      .select()\r\n      .single();\r\n\r\n    if (error) throw error;\r\n    return data;\r\n  }\r\n\r\n  async deleteEmployee(id: string): Promise<void> {\r\n    const { error } = await this.supabase\r\n      .from('employees')\r\n      .delete()\r\n      .eq('id', id);\r\n\r\n    if (error) throw error;\r\n  }\r\n} "],"mappings":";AACA,SAASA,YAAY,QAAwB,uBAAuB;AAEpE,SAASC,WAAW,QAAQ,gCAAgC;;AAK5D,OAAM,MAAOC,eAAe;EAG1BC,YAAA;IACE,IAAI,CAACC,QAAQ,GAAGJ,YAAY,CAC1BC,WAAW,CAACI,WAAW,EACvBJ,WAAW,CAACK,WAAW,CACxB;EACH;EAEMC,YAAYA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAChB,MAAM;QAAEC,IAAI;QAAEC;MAAK,CAAE,SAASH,KAAI,CAACJ,QAAQ,CACxCQ,IAAI,CAAC,WAAW,CAAC,CACjBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAE,CAAC;MAE5C,IAAIJ,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI,IAAI,EAAE;IAAC;EACpB;EAEMM,WAAWA,CAACC,EAAU;IAAA,IAAAC,MAAA;IAAA,OAAAT,iBAAA;MAC1B,MAAM;QAAEC,IAAI;QAAEC;MAAK,CAAE,SAASO,MAAI,CAACd,QAAQ,CACxCQ,IAAI,CAAC,WAAW,CAAC,CACjBC,MAAM,CAAC,GAAG,CAAC,CACXM,EAAE,CAAC,IAAI,EAAEF,EAAE,CAAC,CACZG,MAAM,EAAE;MAEX,IAAIT,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI;IAAC;EACd;EAEMW,cAAcA,CAACC,QAAkB;IAAA,IAAAC,MAAA;IAAA,OAAAd,iBAAA;MACrC,MAAM;QAAEC,IAAI;QAAEC;MAAK,CAAE,SAASY,MAAI,CAACnB,QAAQ,CACxCQ,IAAI,CAAC,WAAW,CAAC,CACjBY,MAAM,CAAC,CAACF,QAAQ,CAAC,CAAC,CAClBT,MAAM,EAAE,CACRO,MAAM,EAAE;MAEX,IAAIT,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI;IAAC;EACd;EAEMe,cAAcA,CAACR,EAAU,EAAEK,QAAkB;IAAA,IAAAI,MAAA;IAAA,OAAAjB,iBAAA;MACjD,MAAM;QAAEC,IAAI;QAAEC;MAAK,CAAE,SAASe,MAAI,CAACtB,QAAQ,CACxCQ,IAAI,CAAC,WAAW,CAAC,CACjBe,MAAM,CAACL,QAAQ,CAAC,CAChBH,EAAE,CAAC,IAAI,EAAEF,EAAE,CAAC,CACZJ,MAAM,EAAE,CACRO,MAAM,EAAE;MAEX,IAAIT,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI;IAAC;EACd;EAEMkB,cAAcA,CAACX,EAAU;IAAA,IAAAY,MAAA;IAAA,OAAApB,iBAAA;MAC7B,MAAM;QAAEE;MAAK,CAAE,SAASkB,MAAI,CAACzB,QAAQ,CAClCQ,IAAI,CAAC,WAAW,CAAC,CACjBkB,MAAM,EAAE,CACRX,EAAE,CAAC,IAAI,EAAEF,EAAE,CAAC;MAEf,IAAIN,KAAK,EAAE,MAAMA,KAAK;IAAC;EACzB;;;uBA7DWT,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAA6B,OAAA,EAAf7B,eAAe,CAAA8B,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
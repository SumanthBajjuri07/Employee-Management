{"ast":null,"code":"import _asyncToGenerator from \"C:/Employee Management/employee-management/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/employee.service\";\nimport * as i3 from \"../../services/avatar.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction EmployeeFormComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeFormComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Company name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeFormComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Please enter a valid email address \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeFormComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Contact number is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction EmployeeFormComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \" Designation is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class EmployeeFormComponent {\n  constructor(fb, employeeService, avatarService, router, route) {\n    this.fb = fb;\n    this.employeeService = employeeService;\n    this.avatarService = avatarService;\n    this.router = router;\n    this.route = route;\n    this.isEditMode = false;\n    this.employeeId = null;\n    this.employeeForm = this.fb.group({\n      name: ['', Validators.required],\n      company_name: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      contact_no: ['', Validators.required],\n      designation: ['', Validators.required],\n      avatar: ['']\n    });\n  }\n  ngOnInit() {\n    this.employeeId = this.route.snapshot.paramMap.get('id');\n    this.isEditMode = !!this.employeeId;\n    if (this.isEditMode && this.employeeId) {\n      this.loadEmployee();\n    } else {\n      this.employeeForm.patchValue({\n        avatar: this.avatarService.generateRandomAvatar()\n      });\n    }\n  }\n  loadEmployee() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        if (_this.employeeId) {\n          const employee = yield _this.employeeService.getEmployee(_this.employeeId);\n          _this.employeeForm.patchValue(employee);\n        }\n      } catch (error) {\n        console.error('Error loading employee:', error);\n      }\n    })();\n  }\n  onSubmit() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.employeeForm.valid) {\n        try {\n          if (_this2.isEditMode && _this2.employeeId) {\n            yield _this2.employeeService.updateEmployee(_this2.employeeId, _this2.employeeForm.value);\n          } else {\n            yield _this2.employeeService.createEmployee(_this2.employeeForm.value);\n          }\n          _this2.router.navigate(['/employees']);\n        } catch (error) {\n          console.error('Error saving employee:', error);\n        }\n      }\n    })();\n  }\n  goBack() {\n    this.router.navigate(['/employees']);\n  }\n  static {\n    this.ɵfac = function EmployeeFormComponent_Factory(t) {\n      return new (t || EmployeeFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.AvatarService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: EmployeeFormComponent,\n      selectors: [[\"app-employee-form\"]],\n      decls: 34,\n      vars: 21,\n      consts: [[1, \"container\", \"mx-auto\", \"p-4\"], [1, \"text-2xl\", \"font-bold\", \"mb-6\"], [1, \"max-w-lg\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-4\"], [\"for\", \"name\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"class\", \"text-red-500 text-xs mt-1\", 4, \"ngIf\"], [\"for\", \"company_name\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"company_name\", \"type\", \"text\", \"formControlName\", \"company_name\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"email\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"email\", \"type\", \"email\", \"formControlName\", \"email\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"contact_no\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"contact_no\", \"type\", \"tel\", \"formControlName\", \"contact_no\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [\"for\", \"designation\", 1, \"block\", \"text-gray-700\", \"text-sm\", \"font-bold\", \"mb-2\"], [\"id\", \"designation\", \"type\", \"text\", \"formControlName\", \"designation\", 1, \"shadow\", \"appearance-none\", \"border\", \"rounded\", \"w-full\", \"py-2\", \"px-3\", \"text-gray-700\", \"leading-tight\", \"focus:outline-none\", \"focus:shadow-outline\"], [1, \"flex\", \"items-center\", \"justify-between\"], [\"type\", \"submit\", 1, \"bg-blue-500\", \"hover:bg-blue-700\", \"text-white\", \"font-bold\", \"py-2\", \"px-4\", \"rounded\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"disabled\"], [\"type\", \"button\", 1, \"bg-gray-500\", \"hover:bg-gray-700\", \"text-white\", \"font-bold\", \"py-2\", \"px-4\", \"rounded\", \"focus:outline-none\", \"focus:shadow-outline\", 3, \"click\"], [1, \"text-red-500\", \"text-xs\", \"mt-1\"]],\n      template: function EmployeeFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function EmployeeFormComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3)(5, \"label\", 4);\n          i0.ɵɵtext(6, \" Name \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵtemplate(8, EmployeeFormComponent_div_8_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 7);\n          i0.ɵɵtext(11, \" Company Name \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"input\", 8);\n          i0.ɵɵtemplate(13, EmployeeFormComponent_div_13_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 3)(15, \"label\", 9);\n          i0.ɵɵtext(16, \" Email \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(17, \"input\", 10);\n          i0.ɵɵtemplate(18, EmployeeFormComponent_div_18_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 11);\n          i0.ɵɵtext(21, \" Contact Number \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(22, \"input\", 12);\n          i0.ɵɵtemplate(23, EmployeeFormComponent_div_23_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"div\", 3)(25, \"label\", 13);\n          i0.ɵɵtext(26, \" Designation \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(27, \"input\", 14);\n          i0.ɵɵtemplate(28, EmployeeFormComponent_div_28_Template, 2, 0, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 15)(30, \"button\", 16);\n          i0.ɵɵtext(31);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function EmployeeFormComponent_Template_button_click_32_listener() {\n            return ctx.goBack();\n          });\n          i0.ɵɵtext(33, \" Cancel \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          let tmp_5_0;\n          let tmp_6_0;\n          let tmp_7_0;\n          let tmp_8_0;\n          let tmp_9_0;\n          let tmp_10_0;\n          let tmp_11_0;\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isEditMode ? \"Edit Employee\" : \"Add New Employee\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.employeeForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"border-red-500\", ((tmp_2_0 = ctx.employeeForm.get(\"name\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.employeeForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.employeeForm.get(\"name\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.employeeForm.get(\"name\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"border-red-500\", ((tmp_4_0 = ctx.employeeForm.get(\"company_name\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.employeeForm.get(\"company_name\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.employeeForm.get(\"company_name\")) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx.employeeForm.get(\"company_name\")) == null ? null : tmp_5_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"border-red-500\", ((tmp_6_0 = ctx.employeeForm.get(\"email\")) == null ? null : tmp_6_0.invalid) && ((tmp_6_0 = ctx.employeeForm.get(\"email\")) == null ? null : tmp_6_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.employeeForm.get(\"email\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.employeeForm.get(\"email\")) == null ? null : tmp_7_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"border-red-500\", ((tmp_8_0 = ctx.employeeForm.get(\"contact_no\")) == null ? null : tmp_8_0.invalid) && ((tmp_8_0 = ctx.employeeForm.get(\"contact_no\")) == null ? null : tmp_8_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx.employeeForm.get(\"contact_no\")) == null ? null : tmp_9_0.invalid) && ((tmp_9_0 = ctx.employeeForm.get(\"contact_no\")) == null ? null : tmp_9_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"border-red-500\", ((tmp_10_0 = ctx.employeeForm.get(\"designation\")) == null ? null : tmp_10_0.invalid) && ((tmp_10_0 = ctx.employeeForm.get(\"designation\")) == null ? null : tmp_10_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_11_0 = ctx.employeeForm.get(\"designation\")) == null ? null : tmp_11_0.invalid) && ((tmp_11_0 = ctx.employeeForm.get(\"designation\")) == null ? null : tmp_11_0.touched));\n          i0.ɵɵadvance(2);\n          i0.ɵɵclassProp(\"opacity-50\", ctx.employeeForm.invalid);\n          i0.ɵɵproperty(\"disabled\", ctx.employeeForm.invalid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditMode ? \"Update\" : \"Add\", \" Employee \");\n        }\n      },\n      dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","EmployeeFormComponent","constructor","fb","employeeService","avatarService","router","route","isEditMode","employeeId","employeeForm","group","name","required","company_name","email","contact_no","designation","avatar","ngOnInit","snapshot","paramMap","get","loadEmployee","patchValue","generateRandomAvatar","_this","_asyncToGenerator","employee","getEmployee","error","console","onSubmit","_this2","valid","updateEmployee","value","createEmployee","navigate","goBack","ɵɵdirectiveInject","i1","FormBuilder","i2","EmployeeService","i3","AvatarService","i4","Router","ActivatedRoute","selectors","decls","vars","consts","template","EmployeeFormComponent_Template","rf","ctx","ɵɵlistener","EmployeeFormComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","EmployeeFormComponent_div_8_Template","EmployeeFormComponent_div_13_Template","EmployeeFormComponent_div_18_Template","EmployeeFormComponent_div_23_Template","EmployeeFormComponent_div_28_Template","EmployeeFormComponent_Template_button_click_32_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","ɵɵclassProp","tmp_2_0","invalid","touched","tmp_3_0","tmp_4_0","tmp_5_0","tmp_6_0","tmp_7_0","tmp_8_0","tmp_9_0","tmp_10_0","tmp_11_0","ɵɵtextInterpolate1"],"sources":["C:\\Employee Management\\employee-management\\src\\app\\components\\employee-form\\employee-form.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EmployeeService } from '../../services/employee.service';\r\nimport { AvatarService } from '../../services/avatar.service';\r\nimport { Employee } from '../../models/employee.model';\r\n\r\n@Component({\r\n  selector: 'app-employee-form',\r\n  template: `\r\n    <div class=\"container mx-auto p-4\">\r\n      <h1 class=\"text-2xl font-bold mb-6\">{{ isEditMode ? 'Edit Employee' : 'Add New Employee' }}</h1>\r\n\r\n      <form [formGroup]=\"employeeForm\" (ngSubmit)=\"onSubmit()\" class=\"max-w-lg\">\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"name\">\r\n            Name\r\n          </label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            formControlName=\"name\"\r\n            class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            [class.border-red-500]=\"employeeForm.get('name')?.invalid && employeeForm.get('name')?.touched\"\r\n          >\r\n          <div *ngIf=\"employeeForm.get('name')?.invalid && employeeForm.get('name')?.touched\" class=\"text-red-500 text-xs mt-1\">\r\n            Name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"company_name\">\r\n            Company Name\r\n          </label>\r\n          <input\r\n            id=\"company_name\"\r\n            type=\"text\"\r\n            formControlName=\"company_name\"\r\n            class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            [class.border-red-500]=\"employeeForm.get('company_name')?.invalid && employeeForm.get('company_name')?.touched\"\r\n          >\r\n          <div *ngIf=\"employeeForm.get('company_name')?.invalid && employeeForm.get('company_name')?.touched\" class=\"text-red-500 text-xs mt-1\">\r\n            Company name is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            formControlName=\"email\"\r\n            class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            [class.border-red-500]=\"employeeForm.get('email')?.invalid && employeeForm.get('email')?.touched\"\r\n          >\r\n          <div *ngIf=\"employeeForm.get('email')?.invalid && employeeForm.get('email')?.touched\" class=\"text-red-500 text-xs mt-1\">\r\n            Please enter a valid email address\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"contact_no\">\r\n            Contact Number\r\n          </label>\r\n          <input\r\n            id=\"contact_no\"\r\n            type=\"tel\"\r\n            formControlName=\"contact_no\"\r\n            class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            [class.border-red-500]=\"employeeForm.get('contact_no')?.invalid && employeeForm.get('contact_no')?.touched\"\r\n          >\r\n          <div *ngIf=\"employeeForm.get('contact_no')?.invalid && employeeForm.get('contact_no')?.touched\" class=\"text-red-500 text-xs mt-1\">\r\n            Contact number is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n          <label class=\"block text-gray-700 text-sm font-bold mb-2\" for=\"designation\">\r\n            Designation\r\n          </label>\r\n          <input\r\n            id=\"designation\"\r\n            type=\"text\"\r\n            formControlName=\"designation\"\r\n            class=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n            [class.border-red-500]=\"employeeForm.get('designation')?.invalid && employeeForm.get('designation')?.touched\"\r\n          >\r\n          <div *ngIf=\"employeeForm.get('designation')?.invalid && employeeForm.get('designation')?.touched\" class=\"text-red-500 text-xs mt-1\">\r\n            Designation is required\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex items-center justify-between\">\r\n          <button\r\n            type=\"submit\"\r\n            [disabled]=\"employeeForm.invalid\"\r\n            class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n            [class.opacity-50]=\"employeeForm.invalid\"\r\n          >\r\n            {{ isEditMode ? 'Update' : 'Add' }} Employee\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            (click)=\"goBack()\"\r\n            class=\"bg-gray-500 hover:bg-gray-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  `,\r\n  styles: []\r\n})\r\nexport class EmployeeFormComponent implements OnInit {\r\n  employeeForm: FormGroup;\r\n  isEditMode = false;\r\n  employeeId: string | null = null;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private employeeService: EmployeeService,\r\n    private avatarService: AvatarService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    this.employeeForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      company_name: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      contact_no: ['', Validators.required],\r\n      designation: ['', Validators.required],\r\n      avatar: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.employeeId = this.route.snapshot.paramMap.get('id');\r\n    this.isEditMode = !!this.employeeId;\r\n\r\n    if (this.isEditMode && this.employeeId) {\r\n      this.loadEmployee();\r\n    } else {\r\n      this.employeeForm.patchValue({\r\n        avatar: this.avatarService.generateRandomAvatar()\r\n      });\r\n    }\r\n  }\r\n\r\n  private async loadEmployee(): Promise<void> {\r\n    try {\r\n      if (this.employeeId) {\r\n        const employee = await this.employeeService.getEmployee(this.employeeId);\r\n        this.employeeForm.patchValue(employee);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading employee:', error);\r\n    }\r\n  }\r\n\r\n  async onSubmit(): Promise<void> {\r\n    if (this.employeeForm.valid) {\r\n      try {\r\n        if (this.isEditMode && this.employeeId) {\r\n          await this.employeeService.updateEmployee(this.employeeId, this.employeeForm.value);\r\n        } else {\r\n          await this.employeeService.createEmployee(this.employeeForm.value);\r\n        }\r\n        this.router.navigate(['/employees']);\r\n      } catch (error) {\r\n        console.error('Error saving employee:', error);\r\n      }\r\n    }\r\n  }\r\n\r\n  goBack(): void {\r\n    this.router.navigate(['/employees']);\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
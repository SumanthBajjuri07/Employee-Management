{"ast":null,"code":"import _asyncToGenerator from \"C:/Employee Management/employee-management/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./supabase.service\";\nexport class EmployeeService {\n  constructor(supabaseService) {\n    this.supabaseService = supabaseService;\n    this.employeesSubject = new BehaviorSubject([]);\n    this.employees$ = this.employeesSubject.asObservable();\n    this.loadEmployees();\n  }\n  loadEmployees() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const employees = yield _this.supabaseService.getEmployees();\n        _this.employeesSubject.next(employees);\n      } catch (error) {\n        console.error('Error loading employees:', error);\n      }\n    })();\n  }\n  getEmployees() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.supabaseService.getEmployees();\n    })();\n  }\n  getEmployee(id) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return _this3.supabaseService.getEmployee(id);\n    })();\n  }\n  createEmployee(employee) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const newEmployee = yield _this4.supabaseService.createEmployee(employee);\n      const currentEmployees = _this4.employeesSubject.value;\n      _this4.employeesSubject.next([newEmployee, ...currentEmployees]);\n      return newEmployee;\n    })();\n  }\n  updateEmployee(id, employee) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const updatedEmployee = yield _this5.supabaseService.updateEmployee(id, employee);\n      const currentEmployees = _this5.employeesSubject.value;\n      const index = currentEmployees.findIndex(emp => emp.id === id);\n      if (index !== -1) {\n        currentEmployees[index] = updatedEmployee;\n        _this5.employeesSubject.next([...currentEmployees]);\n      }\n      return updatedEmployee;\n    })();\n  }\n  deleteEmployee(id) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      yield _this6.supabaseService.deleteEmployee(id);\n      const currentEmployees = _this6.employeesSubject.value;\n      _this6.employeesSubject.next(currentEmployees.filter(emp => emp.id !== id));\n    })();\n  }\n  static {\n    this.ɵfac = function EmployeeService_Factory(t) {\n      return new (t || EmployeeService)(i0.ɵɵinject(i1.SupabaseService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EmployeeService,\n      factory: EmployeeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","EmployeeService","constructor","supabaseService","employeesSubject","employees$","asObservable","loadEmployees","_this","_asyncToGenerator","employees","getEmployees","next","error","console","_this2","getEmployee","id","_this3","createEmployee","employee","_this4","newEmployee","currentEmployees","value","updateEmployee","_this5","updatedEmployee","index","findIndex","emp","deleteEmployee","_this6","filter","i0","ɵɵinject","i1","SupabaseService","factory","ɵfac","providedIn"],"sources":["C:\\Employee Management\\employee-management\\src\\app\\services\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { SupabaseService } from './supabase.service';\r\nimport { Employee } from '../models/employee.model';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n  private employeesSubject = new BehaviorSubject<Employee[]>([]);\r\n  employees$ = this.employeesSubject.asObservable();\r\n\r\n  constructor(private supabaseService: SupabaseService) {\r\n    this.loadEmployees();\r\n  }\r\n\r\n  private async loadEmployees(): Promise<void> {\r\n    try {\r\n      const employees = await this.supabaseService.getEmployees();\r\n      this.employeesSubject.next(employees);\r\n    } catch (error) {\r\n      console.error('Error loading employees:', error);\r\n    }\r\n  }\r\n\r\n  async getEmployees(): Promise<Employee[]> {\r\n    return this.supabaseService.getEmployees();\r\n  }\r\n\r\n  async getEmployee(id: string): Promise<Employee> {\r\n    return this.supabaseService.getEmployee(id);\r\n  }\r\n\r\n  async createEmployee(employee: Employee): Promise<Employee> {\r\n    const newEmployee = await this.supabaseService.createEmployee(employee);\r\n    const currentEmployees = this.employeesSubject.value;\r\n    this.employeesSubject.next([newEmployee, ...currentEmployees]);\r\n    return newEmployee;\r\n  }\r\n\r\n  async updateEmployee(id: string, employee: Employee): Promise<Employee> {\r\n    const updatedEmployee = await this.supabaseService.updateEmployee(id, employee);\r\n    const currentEmployees = this.employeesSubject.value;\r\n    const index = currentEmployees.findIndex(emp => emp.id === id);\r\n    if (index !== -1) {\r\n      currentEmployees[index] = updatedEmployee;\r\n      this.employeesSubject.next([...currentEmployees]);\r\n    }\r\n    return updatedEmployee;\r\n  }\r\n\r\n  async deleteEmployee(id: string): Promise<void> {\r\n    await this.supabaseService.deleteEmployee(id);\r\n    const currentEmployees = this.employeesSubject.value;\r\n    this.employeesSubject.next(currentEmployees.filter(emp => emp.id !== id));\r\n  }\r\n} "],"mappings":";AAGA,SAASA,eAAe,QAAoB,MAAM;;;AAKlD,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,eAAgC;IAAhC,KAAAA,eAAe,GAAfA,eAAe;IAH3B,KAAAC,gBAAgB,GAAG,IAAIJ,eAAe,CAAa,EAAE,CAAC;IAC9D,KAAAK,UAAU,GAAG,IAAI,CAACD,gBAAgB,CAACE,YAAY,EAAE;IAG/C,IAAI,CAACC,aAAa,EAAE;EACtB;EAEcA,aAAaA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACzB,IAAI;QACF,MAAMC,SAAS,SAASF,KAAI,CAACL,eAAe,CAACQ,YAAY,EAAE;QAC3DH,KAAI,CAACJ,gBAAgB,CAACQ,IAAI,CAACF,SAAS,CAAC;OACtC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;;IACjD;EACH;EAEMF,YAAYA,CAAA;IAAA,IAAAI,MAAA;IAAA,OAAAN,iBAAA;MAChB,OAAOM,MAAI,CAACZ,eAAe,CAACQ,YAAY,EAAE;IAAC;EAC7C;EAEMK,WAAWA,CAACC,EAAU;IAAA,IAAAC,MAAA;IAAA,OAAAT,iBAAA;MAC1B,OAAOS,MAAI,CAACf,eAAe,CAACa,WAAW,CAACC,EAAE,CAAC;IAAC;EAC9C;EAEME,cAAcA,CAACC,QAAkB;IAAA,IAAAC,MAAA;IAAA,OAAAZ,iBAAA;MACrC,MAAMa,WAAW,SAASD,MAAI,CAAClB,eAAe,CAACgB,cAAc,CAACC,QAAQ,CAAC;MACvE,MAAMG,gBAAgB,GAAGF,MAAI,CAACjB,gBAAgB,CAACoB,KAAK;MACpDH,MAAI,CAACjB,gBAAgB,CAACQ,IAAI,CAAC,CAACU,WAAW,EAAE,GAAGC,gBAAgB,CAAC,CAAC;MAC9D,OAAOD,WAAW;IAAC;EACrB;EAEMG,cAAcA,CAACR,EAAU,EAAEG,QAAkB;IAAA,IAAAM,MAAA;IAAA,OAAAjB,iBAAA;MACjD,MAAMkB,eAAe,SAASD,MAAI,CAACvB,eAAe,CAACsB,cAAc,CAACR,EAAE,EAAEG,QAAQ,CAAC;MAC/E,MAAMG,gBAAgB,GAAGG,MAAI,CAACtB,gBAAgB,CAACoB,KAAK;MACpD,MAAMI,KAAK,GAAGL,gBAAgB,CAACM,SAAS,CAACC,GAAG,IAAIA,GAAG,CAACb,EAAE,KAAKA,EAAE,CAAC;MAC9D,IAAIW,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBL,gBAAgB,CAACK,KAAK,CAAC,GAAGD,eAAe;QACzCD,MAAI,CAACtB,gBAAgB,CAACQ,IAAI,CAAC,CAAC,GAAGW,gBAAgB,CAAC,CAAC;;MAEnD,OAAOI,eAAe;IAAC;EACzB;EAEMI,cAAcA,CAACd,EAAU;IAAA,IAAAe,MAAA;IAAA,OAAAvB,iBAAA;MAC7B,MAAMuB,MAAI,CAAC7B,eAAe,CAAC4B,cAAc,CAACd,EAAE,CAAC;MAC7C,MAAMM,gBAAgB,GAAGS,MAAI,CAAC5B,gBAAgB,CAACoB,KAAK;MACpDQ,MAAI,CAAC5B,gBAAgB,CAACQ,IAAI,CAACW,gBAAgB,CAACU,MAAM,CAACH,GAAG,IAAIA,GAAG,CAACb,EAAE,KAAKA,EAAE,CAAC,CAAC;IAAC;EAC5E;;;uBA/CWhB,eAAe,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,eAAA;IAAA;EAAA;;;aAAfpC,eAAe;MAAAqC,OAAA,EAAfrC,eAAe,CAAAsC,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}